# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ master ]

env:
  DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
  GITLAB_DOCKER_REGISTRY_URL: ${{ secrets.GITLAB_DOCKER_REGISTRY_URL }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Run tests
      run: ./gradlew test

  pushDocker:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Setup variables
        run: echo "::set-env name=TARGET_REGISTRY::GITHUB"

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: ./gradlew :service:dockerPushImage

  pushDockerToGitilab:
    # Ensure test job passes before pushing image.
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Setup variables
        run: echo "::set-env name=TARGET_REGISTRY::GITLAB"

      - name: Log into registry
        run: |
          echo "${{ secrets.GITLAB_DOCKER_REGISTRY_PASS }}"\
            | docker  login registry.gitlab.com -u ${{ secrets.GITLAB_DOCKER_REGISTRY_USER }} --password-stdin

      - name: Push image
        run: ./gradlew :service:dockerPushImage
