# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ master ]

env:
  DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_URL }}
  GITLAB_DOCKER_REGISTRY_URL: ${{ secrets.GITLAB_DOCKER_REGISTRY_URL }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TOKEN: ${{ secrets.TOKEN }}
jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache gradle dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-gradle
        with:
          # gradle cache files are stored in `~/.gradle` on Linux/macOS
          path: ~/.gradle
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run tests
        run: ./gradlew test
      - name: Publish artifacts
        run: ./gradlew publish

      #PUSH TO GITLAB
      - name: Setup GitLab variables
        run: echo "TARGET_REGISTRY=GITLAB" >> $GITHUB_ENV
      - name: Log into GitLab registry
        run: |
          echo "${{ secrets.GITLAB_DOCKER_REGISTRY_PASS }}"\
            | docker login registry.gitlab.com -u ${{ secrets.GITLAB_DOCKER_REGISTRY_USER }} --password-stdin
        env:
          TARGET_REGISTRY: GITLAB
      - name: Push image to GitLab
        run: ./gradlew :service:dockerPushImage

      # PUSH TO GITHUB
      - name: Log into GitHub registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}"\
            | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
        env:
          TARGET_REGISTRY: GITHUB
      - name: Push image to GitHub
        run: ./gradlew :service:dockerPushImage
